fICHIER ->	with ada.textio ; use ada.textio ; procedure iDENT is dECLETOILE begin iNSTRPLUS end iDENTINTER ; 
dECL ->	type iDENT ;
|	pROCEDURE
|	fUNC 
dECLETOILE ->	dECL dECLETOILE2
|	
dECLETOILE2 ->	dECL dECLETOILE2
|	

pROCEDURE -> procedure iDENT is pARAMSINTER dECLETOILE begin iNSTRPLUS end iDENTINTER ; 
fUNC ->	function iDENT return pARAMSINTER tYPE is dECLETOILE begin iNSTRPLUS end iDENTINTER ; 
eXPR ->	tERM2 
oPTERMETOILE ->	oP tERM1
|	
oPTERMETOILE2 -> oP tERM1
|	

tERM1 ->	int oPTERMETOILE
|	caractere oPTERMETOILE
|	true oPTERMETOILE
|	false oPTERMETOILE
|	null oPTERMETOILE
|	not eXPR3
|	moins eXPR3
|	iDENT ( eXPR ) vIRGULEEXPRETOILE2
|	caractere val eXPR3
|	new iDENT oPTERMETOILE 
tERM2 ->	int oPTERMETOILE
|	caractere oPTERMETOILE
|	true oPTERMETOILE
|	false oPTERMETOILE
|	null oPTERMETOILE
|	not eXPR2
|	moins eXPR2
|	iDENT ( eXPR ) vIRGULEEXPRETOILE1
|	caractere val eXPR2
|	new iDENT oPTERMETOILE 

vIRGULEEXPRETOILE2 ->	, eXPR1
|	
iNSTR ->	aCCES := eXPR ;
|	return eXPRINTER ;
|	iDENT ; eXPRPARENTHETOILE
|	bEGIN
|	iF
|	fOR
|	wHILE 
eXPRINTER ->	eXPR
|	
eXPRPARENTHETOILE ->	( eXPR ) eXPRPARENTHETOILE2
|	
eXPRPARENTHETOILE2 ->	( eXPR ) eXPRPARENTHETOILE2
|	
iNSTRPLUS ->	iNSTR iNSTRPLUS2 
iNSTRPLUS2 ->	iNSTR iNSTRPLUS2
|	
bEGIN ->	begin iNSTRPLUS end 
iF ->	if eXPR then iNSTRPLUS iF_TAIL 
iF_TAIL ->	elsif eXPR then iNSTRPLUS iF_TAIL
|	iNSTRPLUSELSEINTER end if 
iNSTRPLUSELSEINTER ->	else iNSTRPLUS
|	
fOR ->	for iDENT in rEVERSEINTER eXPR...eXPR loop iNSTRPLUS end loop ; 
rEVERSE ->	reverse 
rEVERSEINTER ->	rEVERSE
|	
wHILE ->	while eXPR loop iNSTRPLUS end loop 

iDENTVIRGULEETOILE ->	, iDENT iDENTVIRGULEETOILE2
|	
iDENTVIRGULEETOILE2 ->	, iDENT iDENTVIRGULEETOILE2
|	

tYPE ->	iDENT
|	access iDENT 
pARAMS ->	( pARAM ) pARAMVIRGULEETOILE 
pARAMVIRGULEETOILE ->	, pARAM pARAMVIRGULEETOILE2
|	
pARAMVIRGULEETOILE2 ->	, pARAM vIRGULEEXPRETOILE2
|	
pARAMSINTER ->	pARAMS
|	
pARAM ->	iDENT : iDENTVIRGULEETOILE mODEINTER tYPE 
mODEINTER ->	mODE
|	
mODE ->	in
|	in out 
oP ->	equal
|	/=
|	<
|	<=
|	>
|	>=
|	+
|	-
|	*
|	/
|	rem
|	and
|	and then
|	or
|	or else 

aCCES ->	iDENT
|	eXPR.iDENT 
iDENT ->	ident 
iDENTINTER ->	iDENT
|	
eXPR1 ->	tERM24 
eXPR2 ->	tERM23 
vIRGULEEXPRETOILE1 ->	, eXPR6
|	oPTERMETOILE 
eXPR3 ->	tERM22 
vIRGULEEXPRETOILE2 ->	, eXPR5
|	oPTERMETOILE 


eXPR5 ->	tERM24 oPTERMETOILE 
tERM22 ->	int oPTERMETOILE oPTERMETOILE
|	caractere oPTERMETOILE oPTERMETOILE
|	true oPTERMETOILE oPTERMETOILE
|	false oPTERMETOILE oPTERMETOILE
|	null oPTERMETOILE oPTERMETOILE
|	not eXPR2 oPTERMETOILE
|	moins eXPR2 oPTERMETOILE
|	iDENT ( eXPR ) vIRGULEEXPRETOILE1 oPTERMETOILE
|	caractere val eXPR2 oPTERMETOILE
|	new iDENT oPTERMETOILE oPTERMETOILE 
eXPR6 ->	tERM24 oPTERMETOILE 
tERM23 ->	int oPTERMETOILE oPTERMETOILE
|	caractere oPTERMETOILE oPTERMETOILE
|	true oPTERMETOILE oPTERMETOILE
|	false oPTERMETOILE oPTERMETOILE
|	null oPTERMETOILE oPTERMETOILE
|	not eXPR2 oPTERMETOILE
|	moins eXPR2 oPTERMETOILE
|	iDENT ( eXPR ) vIRGULEEXPRETOILE1 oPTERMETOILE
|	caractere val eXPR2 oPTERMETOILE
|	new iDENT oPTERMETOILE oPTERMETOILE 
tERM24 ->	int oPTERMETOILE vIRGULEEXPRETOILE2
|	caractere oPTERMETOILE vIRGULEEXPRETOILE2
|	true oPTERMETOILE vIRGULEEXPRETOILE2
|	false oPTERMETOILE vIRGULEEXPRETOILE2
|	null oPTERMETOILE vIRGULEEXPRETOILE2
|	not eXPR2 vIRGULEEXPRETOILE2
|	moins eXPR2 vIRGULEEXPRETOILE2
|	iDENT ( eXPR ) vIRGULEEXPRETOILE1 vIRGULEEXPRETOILE2
|	caractere val eXPR2 vIRGULEEXPRETOILE2
|	new iDENT oPTERMETOILE vIRGULEEXPRETOILE2 
